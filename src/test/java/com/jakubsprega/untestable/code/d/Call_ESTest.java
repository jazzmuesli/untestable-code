/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 27 23:58:27 GMT 2018
 */

package com.jakubsprega.untestable.code.d;

import org.junit.Test;
import static org.junit.Assert.*;
import com.jakubsprega.untestable.code.d.IncomingCall;
import com.jakubsprega.untestable.code.d.OutgoingCall;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Call_ESTest extends Call_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IncomingCall incomingCall0 = new IncomingCall(0L, (Date) null);
      long long0 = incomingCall0.getNumber();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-377L));
      IncomingCall incomingCall0 = new IncomingCall((-377L), mockDate0);
      long long0 = incomingCall0.getNumber();
      assertEquals((-377L), long0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      OutgoingCall outgoingCall0 = new OutgoingCall(145L, mockDate0);
      Date date0 = outgoingCall0.getDate();
      assertEquals(145L, outgoingCall0.number);
      assertNotNull(date0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IncomingCall incomingCall0 = new IncomingCall(819L, (Date) null);
      long long0 = incomingCall0.getNumber();
      assertEquals(819L, long0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      IncomingCall incomingCall0 = new IncomingCall(819L, (Date) null);
      incomingCall0.getDate();
      assertEquals(819L, incomingCall0.number);
  }
}
