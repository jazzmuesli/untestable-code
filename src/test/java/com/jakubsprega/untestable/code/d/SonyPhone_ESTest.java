/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 27 23:56:06 GMT 2018
 */

package com.jakubsprega.untestable.code.d;

import org.junit.Test;
import static org.junit.Assert.*;
import com.jakubsprega.untestable.code.d.Call;
import com.jakubsprega.untestable.code.d.IncomingCall;
import com.jakubsprega.untestable.code.d.OutgoingCall;
import com.jakubsprega.untestable.code.d.SonyPhone;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class SonyPhone_ESTest extends SonyPhone_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SonyPhone sonyPhone0 = new SonyPhone();
      MockDate mockDate0 = new MockDate(2315L);
      OutgoingCall outgoingCall0 = new OutgoingCall(2315L, mockDate0);
      sonyPhone0.call(outgoingCall0);
      assertEquals(2315L, outgoingCall0.getNumber());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SonyPhone sonyPhone0 = new SonyPhone();
      List<Call> list0 = sonyPhone0.getRecentCalls();
      //  // Unstable assertion: assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SonyPhone sonyPhone0 = new SonyPhone();
      MockDate mockDate0 = new MockDate(2315L);
      IncomingCall incomingCall0 = new IncomingCall(2315L, mockDate0);
      sonyPhone0.answer(incomingCall0);
      assertFalse(SonyPhone.SERVICE_MODE);
  }
}
